Skip to content
Chat history

You said:
make a py that add tvg name to channel which dont have

example
m3u
#EXTINF:-1 tvg-id=""  tvg-logo="https://jiotv.catchup.cdn.jio.com/dare_images/images/Colors_SD.png" group-title="VOOTüíôTV",Colors SD
https://jiotvmblive.cdn.jio.com/bpk-tv/Colors_voot_MOB/output03/index.m3u8?

#EXTINF:-1 tvg-id="" tvg-logo="https://jiotv.catchup.cdn.jio.com/dare_images/images/Colors_HD.png" group-title="VOOTüíôTV",Colors HD
https://jiotvmblive.cdn.jio.com/bpk-tv/Colors_HD_voot_MOB/output03/index.m3u8?

take tvg name from tvg logo like this  Colors HD
ChatGPT said:
Here is a Python script that reads an M3U file and adds tvg-name="..." by extracting the name from the tvg-logo URL if tvg-name is missing:

‚úÖ What it does:
Scans each line starting with #EXTINF.

Checks if tvg-name is missing.

If missing, it:

Extracts the filename from the tvg-logo URL.

Converts it into a readable name (like Colors_HD.png ‚Üí Colors HD).

Inserts it into the #EXTINF line as tvg-name="...".

‚úÖ Python Script: add_tvg_name.py
import re

def extract_name_from_logo(logo_url):
    if not logo_url:
        return ""
    # Extract the filename without extension
    filename = logo_url.split("/")[-1].split(".")[0]
    # Replace _ with space and remove extra parts
    return filename.replace("_", " ").strip()

def add_tvg_name_to_m3u(input_file, output_file):
    updated_lines = []

    with open(input_file, "r", encoding="utf-8") as file:
        lines = file.readlines()

    for i, line in enumerate(lines):
        if line.startswith("#EXTINF"):
            if 'tvg-name="' not in line:
                logo_match = re.search(r'tvg-logo="([^"]+)"', line)
                logo_url = logo_match.group(1) if logo_match else ""
                tvg_name = extract_name_from_logo(logo_url)
                # Add tvg-name if not present
                if tvg_name:
                    line = line.replace('tvg-logo=', f'tvg-name="{tvg_name}" tvg-logo=')
        updated_lines.append(line)

    with open(output_file, "w", encoding="utf-8") as file:
        file.writelines(updated_lines)

# === USAGE ===
input_file = "input.m3u"
output_file = "output.m3u"
add_tvg_name_to_m3u(input_file, output_file)
üìÅ Example:
Given this line:

#EXTINF:-1 tvg-id=""  tvg-logo="https://jiotv.catchup.cdn.jio.com/dare_images/images/Colors_HD.png" group-title="VOOTüíôTV",Colors HD
It becomes:

#EXTINF:-1 tvg-id="" tvg-name="Colors HD" tvg-logo="https://jiotv.catchup.cdn.jio.com/dare_images/images/Colors_HD.png" group-title="VOOTüíôTV",Colors HD
Let me know if you want a version that modifies in-place or processes from clipboard or string directly.

You said:
make this type workflow
name: Fetch CDN URL Every 2 Minutes

on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:

jobs:
  fetch-cdn-url:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fetch playlist and extract CDN URL only
        run: |
          curl -v "https://star-sports-2-hindi-hd.joker-verse.workers.dev/index.m3u8" 2>&1 \
            | grep -i '< location:' \
            | head -n 1 \
            | sed 's/< location: //I' > get.txt

      - name: Commit and push get.txt
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add get.txt
          git commit -m "Update get.txt - $(date -u)"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




same only fetch __hdnea__=st=1751309406~exp=1751395806~acl=/*~hmac=41e494691dacdc5aa33ac94d20ae1835a8cdb01d4d307ec7ec57b7d4cc5cd4d8
save it in fetch.txt
ChatGPT said:
Here's the updated GitHub Actions workflow file that:

‚úÖ Fetches the M3U8 URL
‚úÖ Extracts only the __hdnea__=... token
‚úÖ Saves it to fetch.txt
‚úÖ Commits and pushes it every 2 minutes

‚úÖ .github/workflows/fetch_hdnea.yml
name: Fetch HDNEA Token Every 2 Minutes

on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:

jobs:
  fetch-hdnea-token:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fetch __hdnea__ token
        run: |
          curl -s -L "https://star-sports-2-hindi-hd.joker-verse.workers.dev/index.m3u8" \
          | grep -o '__hdnea__=[^&"]*' \
          | head -n 1 > fetch.txt

      - name: Commit and push fetch.txt
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add fetch.txt
          git diff --cached --quiet || git commit -m "Update fetch.txt - $(date -u)" && git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
üîç Explanation:
curl -s -L fetches the full content of the playlist.

grep -o '__hdnea__=[^&"]*' extracts only the __hdnea__=... token.

head -n 1 picks the first token.

Output is saved in fetch.txt and pushed if it changed.

Let me know if you also want to extract expiration time or save to a .json instead.

You said:
ur comd cant fetched use this comand

          curl -v "https://star-sports-2-hindi-hd.joker-verse.workers.dev/index.m3u8" 2>&1 \
ChatGPT said:
Thanks! You're right ‚Äî the actual token is in the HTTP redirect URL (from the Location header), not the content of the .m3u8. Here's the fixed version of the workflow using your curl -v ... approach to capture the Location header and extract the __hdnea__ token.

‚úÖ Updated GitHub Actions Workflow
name: Fetch HDNEA Token Every 2 Minutes

on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:

jobs:
  fetch-hdnea-token:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fetch __hdnea__ token from redirect URL
        run: |
          curl -v "https://star-sports-2-hindi-hd.joker-verse.workers.dev/index.m3u8" 2>&1 \
          | grep -i '< location:' \
          | head -n 1 \
          | sed 's/< location: //I' \
          | grep -o '__hdnea__=[^&]*' > fetch.txt

      - name: Commit and push fetch.txt
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add fetch.txt
          git diff --cached --quiet || git commit -m "Update fetch.txt - $(date -u)" && git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
üìù What This Does:
Grabs the redirect URL from curl -v output.

Extracts the __hdnea__=... value using grep.

Saves just that token into fetch.txt.

Pushes the file only if the token has changed.

Let me know if you want to store the full redirect URL or extract other query parameters like st, exp, or hmac separately.




No file chosenNo file chosen
ChatGPT can make mistakes. Check important info. See Cookie Preferences.
